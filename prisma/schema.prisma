// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Alias {
    id   Int    @id
    name String
}

model Brand {
    id       Int       @id
    name     String
    products Product[]
}

model Category {
    id     Int            @id
    alias  Int?
    parent Int?
    names  CategoryName[]
}

model CategoryName {
    id         Int      @id @default(autoincrement())
    category   Category @relation(fields: [categoryId], references: [id], onUpdate: Cascade, onDelete: Cascade)
    categoryId Int
    lang       String
    text       String?
}

model Product {
    id            Int            @id @default(autoincrement())
    productId     Int
    active        Boolean
    weight        Float
    freeTransport Boolean        @default(false)
    variantId     Int            @unique
    sku           String
    ean           String
    brand         Brand?         @relation(fields: [brandId], references: [id], onUpdate: Cascade, onDelete: Cascade)
    brandId       Int?
    createdAt     DateTime       @default(now())
    updatedAt     DateTime       @default(now()) @updatedAt
    titles        ProductTitle[]
}

model ProductTitle {
    id                Int       @id @default(autoincrement())
    name              String?
    lang              String
    newPrice          Float     @default(0)
    oldPrice          Float     @default(0)
    priceDifference   Float
    priceDifferenceAt DateTime?
    createdAt         DateTime  @default(now())
    updatedAt         DateTime  @default(now())
    products          Product[]
}

model Country {
    id          Int           @id @default(autoincrement())
    iso         String
    name        String
    currency    String
    locale      String
    mailingList MailingList[]
    passwords   Password[]
}

model MailingList {
    id        Int     @id @default(autoincrement())
    country   Country @relation(fields: [countryId], references: [id])
    countryId Int
    subject   String
    emails    Email[]
}

model Password {
    id        Int     @id @default(autoincrement())
    country   Country @relation(fields: [countryId], references: [id])
    countryId Int
    password  String
}

model Email {
    id          Int           @id @default(autoincrement())
    email       String
    mailingList MailingList[]
}
